package IO;

import org.junit.jupiter.api.Test;

import java.io.*;

/**
 * @Author: cola
 * @Created: cola on 2021/3/16 20:57
 * @Version 1.0
 *
 * 一、流的分类：
 *    1.操作数据单位：字节流、字符流
 *    2.数据的流向：输入流、输出流
 *    3.流的角色：节点流、处理流
 * 二、流的体系结构
 *    抽象基流          文件流（节点流）      缓冲流
 *    InputStream      FileInputStream      BufferedInputStream
 *    OutPutStream     FileOutPutStream     BufferedOutputStream
 *    Reader           FileReaderStream     BufferedReader
 *    Writer           FileReaderSteam      BufferWriter
 *
 *
 */
public class FileReaderWriterTest {
    public static void main(String[] args) {
        File file1 = new File("Hello.txt");
        System.out.println(file1.getAbsoluteFile());
    }
    
    @Test
    void testFileReader(){
        File file = new File("F:\\剑指offer\\src\\test\\java\\IO\\Hello.txt");
        System.out.println(file.getAbsoluteFile());
        FileReader fileReader = null;
        try {
            //2.提供具体的流
            fileReader = new FileReader(file);
            //3.数据的读入
            int data;
            while ((data = fileReader.read()) != -1){
                System.out.println((char)data+"");
                data = fileReader.read();
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }finally {
            try {
                if (fileReader != null){
                    fileReader.close();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }


    }
    @Test
    void testFileReader2() throws IOException {
        //实例化文件
        File file = new File("F:\\剑指offer\\src\\test\\java\\IO\\FileReaderWriterTest.java");
        int hasData = 0;
        //2.提供流
        FileReader fileReader = null;
        try {
            fileReader = new FileReader(file);
            char [] c1 = new char[2048];

            while ((hasData = fileReader.read(c1)) > 0){
               // System.out.println("hasData="+hasData);
                System.out.println(new String(c1,0,hasData));

            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }finally {

            if (null != fileReader){
                fileReader.close();
            }
        }

    }

    @Test
    void fileWriter() throws IOException {
        //读入数据
        FileReader fileReader = new FileReader("F:\\剑指offer\\src\\test\\java\\IO\\FileReaderWriterTest.java");
        //1.创建字节输出流
        FileWriter fileWriter = new FileWriter("FileOut.txt");
        try {

            //2.创建接收容器
            char[] c = new char[100];
            int hasData = 0;
            //3.接收字符
            while ((hasData = fileReader.read(c))>0){

                fileWriter.write(c,0,hasData);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }finally {
            if (null != fileReader){
                try {
                    fileReader.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

            if (null != fileWriter){

                fileWriter.close();
            }

        }



    }
}
